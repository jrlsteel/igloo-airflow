AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploy automation for Enzek Meterpoint Readings DAGs

Parameters:
  Environment:
    Type: String
    Default: uat
    AllowedValues:
      - uat
      - staging
      - prod
  StackName:
    Type: String
    Default: igloo-cdw-airflow

Mappings:
  EnvironmentMap:
    uat:
      SentryDsn: AWS::NoValue
    staging:
      SentryDsn: AWS::NoValue
    prod:
      SentryDsn: AWS::NoValue

Conditions:
  UATEnvironment: !Equals [ !Ref Environment, uat ]
  StagingEnvironment: !Equals [ !Ref Environment, staging ]
  ProdEnvironment: !Equals [ !Ref Environment, prod ]
  UATOrStagingEnvironment: !Or [ Condition: UATEnvironment, Condition: StagingEnvironment ]

Resources:
  S3SyncUserManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "A managed policy that allows write access to all CDW Source Data buckets"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Allow read/write access to the CDW S3 buckets in the current account
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !ImportValue CoreIglooDataWarehouseS3BucketArn
              - !ImportValue CoreIglooDataWarehouseDataScienceS3BucketArn
              - !ImportValue CoreIglooDataWarehouseFinanceS3BucketArn
              - !ImportValue CoreIglooDataWarehouseMeteringS3BucketArn
              - !ImportValue CoreIglooDataWarehouseSmartMeterDataS3BucketArn
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource:
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseDataScienceS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseFinanceS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseMeteringS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseSmartMeterDataS3BucketArn, "*" ]]
          # Allow read access to the CDW S3 buckets in the production account
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !ImportValue CoreIglooDataWarehouseProdS3BucketArn
              - !ImportValue CoreIglooDataWarehouseDataScienceProdS3BucketArn
              - !ImportValue CoreIglooDataWarehouseFinanceProdS3BucketArn
              - !ImportValue CoreIglooDataWarehouseMeteringProdS3BucketArn
              - !ImportValue CoreIglooDataWarehouseSmartMeterDataProdS3BucketArn
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseProdS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseDataScienceProdS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseFinanceProdS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseMeteringProdS3BucketArn, "*" ]]
              - !Join [ "/", [ !ImportValue CoreIglooDataWarehouseSmartMeterDataProdS3BucketArn, "*" ]]

  S3SyncUser:
    Type: AWS::IAM::User
    Properties:
      UserName: s3-sync
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - !Ref S3SyncUserManagedPolicy
      Tags:
        - Key: category
          Value: cdw

  S3SyncUserAccessKey:
    Condition: UATOrStagingEnvironment
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref S3SyncUser
  
  GlueRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${StackName}-GlueRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: !Sub ${StackName}-CDWS3BucketsFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource:
                  - !Sub
                    - arn:aws:s3:::${BucketName}/*
                    - { BucketName: !ImportValue CoreIglooDataWarehouseS3Bucket}
                    
  WeatherForecastDailyStage2Crawler:
    Type: AWS::Glue::Crawler
    Properties:
      Configuration: "{\"Version\":1,\"Grouping\":{\"TableGroupingPolicy\":\"CombineCompatibleSchemas\"}}"
      DatabaseName: data-catalogue-s3-stage2
      Name: data-crawler-weather-forecast-daily-stage2
      Role: !GetAtt GlueRole.Arn
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      Targets:
        S3Targets:
          - Path: !Sub
            - s3://${BucketName}/stage2/stage2_DailyForecast/
            - { BucketName: !ImportValue CoreIglooDataWarehouseS3Bucket }

  WeatherForecastHourlyStage2Crawler:
    Type: AWS::Glue::Crawler
    Properties:
      Configuration: "{\"Version\":1,\"Grouping\":{\"TableGroupingPolicy\":\"CombineCompatibleSchemas\"}}"
      DatabaseName: data-catalogue-s3-stage2
      Name: data-crawler-weather-forecast-hourly-stage2
      Role: !GetAtt GlueRole.Arn
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      Targets:
        S3Targets:
          - Path: !Sub
            - s3://${BucketName}/stage2/stage2_HourlyForecast/
            - { BucketName: !ImportValue CoreIglooDataWarehouseS3Bucket }
                  

Outputs:
  S3SyncUserAccessKey:
    Condition: UATOrStagingEnvironment
    Value: !Ref S3SyncUserAccessKey
  
  S3SyncUserSecretAccessKey:
    Condition: UATOrStagingEnvironment
    Value: !GetAtt S3SyncUserAccessKey.SecretAccessKey

  