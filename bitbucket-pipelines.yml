image: atlassian/default-image:2

pipelines:
  branches:
    feature/*:
      - step:
          name: Test
          image:
            name: 555393537168.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_UAT
              secret-key: $AWS_SECRET_ACCESS_KEY_UAT
          services:
            - docker
          script:
            - make ci-test

    develop:
      - step:
          name: Test
          image:
            name: 555393537168.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_UAT
              secret-key: $AWS_SECRET_ACCESS_KEY_UAT
          services:
            - docker
          script:
            - make ci-test
      - step:
          name: Build, package and push to S3
          deployment: UAT
          image:
            name: 555393537168.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_UAT
              secret-key: $AWS_SECRET_ACCESS_KEY_UAT
          services:
            - docker
          script:
            - export AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID_UAT
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_UAT
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_UAT
            - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION_UAT
            - make -e ENVIRONMENT=uat -C cloudformation build deploy
            - make -e ENVIRONMENT=uat build package deploy

    release/*:
      - step:
          name: Test
          image:
            name: 835569423516.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_STAGING
              secret-key: $AWS_SECRET_ACCESS_KEY_STAGING
          services:
            - docker
          script:
            - make test
      - step:
          name: Build & Push to ECR
          deployment: Staging
          image:
            name: 835569423516.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_STAGING
              secret-key: $AWS_SECRET_ACCESS_KEY_STAGING
          services:
            - docker
          script:
            - export AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID_STAGING
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STAGING
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STAGING
            - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION_STAGING
            - make -e ENVIRONMENT=staging -C cloudformation build deploy
            - make -e ENVIRONMENT=staging build package deploy
      - step:
          # This step should be executed when a release is finalised and
          # approved - it uses git flow to finish the release.
          trigger: manual
          name: Finish Release
          image:
            name: 835569423516.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_STAGING
              secret-key: $AWS_SECRET_ACCESS_KEY_STAGING
          services:
            - docker
          script:
            - make git-flow-init
            - make release-finish

  tags:
    v*.*.*:
      - step:
          #Â We add a dummy step in here as Bitbucket does not allow the first step in
          # a pipeline to have `trigger: manual` set, but we only want a manual step
          # in this pipeline.
          name: null
          script:
            - echo "No action"
      - step:
          trigger: manual
          name: Deploy to Production
          deployment: Production
          image:
            name: 630944350233.dkr.ecr.eu-west-1.amazonaws.com/build-tools/aws-sam-cli:latest
            aws:
              access-key: $AWS_ACCESS_KEY_ID_PROD
              secret-key: $AWS_SECRET_ACCESS_KEY_PROD
          services:
            - docker
          script:
            - export AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID_PROD
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD
            - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION_PROD
            - make -e ENVIRONMENT=prod -C cloudformation build deploy
            - make -e ENVIRONMENT=prod build package deploy
